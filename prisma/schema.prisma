// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://root:secret@db:5432/z1"
}

model User {
  id    Int     @default(autoincrement()) @id
  name  String
  cart  Cart?
  order Order[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now()) @updatedAt


  @@index(fields: [name])
}

model Product {
  sku           Int            @default(autoincrement()) @id
  name          String  
  categories    Category[]
  cart          CartItems?
  order         OrderItems?
  stock         Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt


  @@index(fields: [sku, name])
}

model Cart {
  id            Int            @default(autoincrement()) @id
  user          User           @relation(fields: [userId], references: [id])
  userId        Int            @unique
  cartItems     CartItems[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt


  @@index(fields: [id])
}

model CartItems {
  id            Int             @default(autoincrement()) @id
  cart          Cart            @relation(fields: [cartId], references: [id])
  cartId        Int             @unique
  product       Product         @relation(fields: [productId], references: [sku])
  productId     Int             @unique
  createdAt     DateTime        @default(now())
  quantity      Int

  @@index(fields:[cartId])
}

model Category {
  id            Int              @default(autoincrement()) @id
  name          String
  createdAt     DateTime         @default(now())
  products      Product[]

  @@index(fields: [id])
}

model Order {
  id            Int               @default(autoincrement()) @id
  user          User              @relation(fields: [userId], references: [id])
  userId        Int               @unique
  createdAt     DateTime          @default(now())
  orderItems    OrderItems[]
  

  @@index(fields: [userId])
}

model OrderItems {
  id            Int                @default(autoincrement()) @id
  order         Order              @relation(fields: [orderId], references: [id])
  orderId       Int
  product       Product            @relation(fields: [productId], references: [sku])
  productId     Int                @unique
  quantity      Int
  createdAt     DateTime           @default(now())


  @@index(fields: [orderId])
}
